

    目录

    Python教程
    Python简介
    安装Python
    第一个Python程序
    Python基础
    函数
    高级特性
    函数式编程
    模块
    面向对象编程
    面向对象高级编程
    错误、调试和测试
    IO编程
    文件读写
    StringIO和BytesIO
    操作文件和目录
    序列化
    进程和线程
    正则表达式
    常用内建模块
    常用第三方模块
    virtualenv
    图形界面
    网络编程
    电子邮件
    访问数据库
    Web开发
    异步IO
    实战
    FAQ
    期末总结

关于作者
StringIO和BytesIO
阅读: 163016
StringIO

很多时候，数据读写不一定是文件，也可以在内存中读写。

StringIO顾名思义就是在内存中读写str。

要把str写入StringIO，我们需要先创建一个StringIO，然后，像文件一样写入即可：

>>> from io import StringIO
>>> f = StringIO()
>>> f.write('hello')
5
>>> f.write(' ')
1
>>> f.write('world!')
6
>>> print(f.getvalue())
hello world!

getvalue()方法用于获得写入后的str。

要读取StringIO，可以用一个str初始化StringIO，然后，像读文件一样读取：

>>> from io import StringIO
>>> f = StringIO('Hello!\nHi!\nGoodbye!')
>>> while True:
...     s = f.readline()
...     if s == '':
...         break
...     print(s.strip())
...
Hello!
Hi!
Goodbye!

BytesIO

StringIO操作的只能是str，如果要操作二进制数据，就需要使用BytesIO。

BytesIO实现了在内存中读写bytes，我们创建一个BytesIO，然后写入一些bytes：

>>> from io import BytesIO
>>> f = BytesIO()
>>> f.write('中文'.encode('utf-8'))
6
>>> print(f.getvalue())
b'\xe4\xb8\xad\xe6\x96\x87'

请注意，写入的不是str，而是经过UTF-8编码的bytes。

和StringIO类似，可以用一个bytes初始化BytesIO，然后，像读文件一样读取：

>>> from io import BytesIO
>>> f = BytesIO(b'\xe4\xb8\xad\xe6\x96\x87')
>>> f.read()
b'\xe4\xb8\xad\xe6\x96\x87'

小结

StringIO和BytesIO是在内存中操作str和bytes的方法，使得和读写文件具有一致的接口。
参考源码

do_stringio.py

do_bytesio.py
感觉本站内容不错，读后有收获？

 我要小额赞助，鼓励作者写出更好的教程
还可以分享给朋友

 分享到微博
上一页
下一页
评论

发表评论

2.7旧版教程
